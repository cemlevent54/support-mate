{
    "config": {
        "health_check": {
            "memory_info": "Bellek bilgisi alındı.",
            "uptime_info": "Çalışma süresi: {seconds} saniye"
        },
        "database": {
            "mongo_connection_success": "MongoDB bağlantısı başarılı. DB: {db}",
            "mongo_connection_error": "MongoDB bağlantı hatası: {error}",
            "connecting": "MongoDB'ye bağlanılıyor... URI: {uri}",
            "connected": "MongoDB'ye başarıyla bağlanıldı. DB: {db}",
            "connection_failed": "MongoDB bağlantısı başarısız oldu: {error}",
            "closing": "MongoDB bağlantısı kapatılıyor...",
            "closed": "MongoDB bağlantısı kapatıldı.",
            "mongo_server_connected": "MongoDB sunucusuna başarıyla bağlanıldı.",
            "db_created_or_exists": "Veritabanı oluşturuldu veya mevcut: {db}",
            "test_collections_created": "Test koleksiyonları oluşturuldu: {collections}",
            "mongo_test_success": "MongoDB bağlantısı başarılı.",
            "mongo_test_error": "MongoDB bağlantı hatası: {error}"
        },
        "redis": {
            "redis_connection_success": "Redis bağlantısı başarılı.",
            "redis_connection_error": "Redis bağlantı hatası: {error}",
            "connecting": "Redis'e bağlanılıyor... URL: {url}",
            "connected": "Redis'e başarıyla bağlanıldı.",
            "connection_failed": "Redis bağlantısı başarısız oldu: {error}",
            "agent_added": "Online temsilci eklendi: {user_id}",
            "agent_removed": "Online temsilci çıkarıldı: {user_id}",
            "agent_selected": "Temsilci seçildi: {agent_id}",
            "agent_rotated": "Temsilci sona eklendi (round robin): {agent_id}",
            "redis_test_success": "Redis bağlantısı başarılı.",
            "redis_test_error": "Redis bağlantı hatası: {error}",
            "queue_cleared": "[REDIS] Online queue temizlendi. Silinen kayıt sayısı: {result}",
            "all_agents_listed": "[REDIS] Queue'daki tüm agent'lar: {agents}"
        },
        "kafka": {
            "kafka_connection_success": "Kafka bağlantısı başarılı.",
            "kafka_connection_error": "Kafka bağlantı hatası: {error}",
            "kafka_test_success": "Kafka bağlantısı başarılı.",
            "kafka_test_error": "Kafka bağlantı hatası: {error}"
        },
        "language": {
            "default_language": "Varsayılan dil: {lang}"
        },
        "socketio": {
            "socketio_config_imported": "Socket.IO config index.py dosyasından import edildi ",
            "server_initialized": "Socket.IO sunucusu başlatıldı.",
            "client_connected": "[SOCKET][CONNECT] İstemci bağlandı: {sid}. Toplam bağlantı: {count}",
            "client_disconnected": "[SOCKET][DISCONNECT] İstemci bağlantısı kesildi: {sid}. Toplam bağlantı: {count}",
            "user_offline": "[SOCKET][DISCONNECT] Kullanıcı {user_id} artık çevrimdışı (sid: {sid})",
            "join_room": "[SOCKET][JOIN_ROOM] Kullanıcı {user_id} oda {chat_id}'ye katıldı (sid: {sid}) | Payload: {data} | Oda üyeleri: {members}",
            "join_room_error": "[SOCKET][JOIN_ROOM][HATA] {error} | Payload: {data}",
            "leave_room": "[SOCKET][LEAVE_ROOM] Kullanıcı {user_id} oda {chat_id}'den ayrıldı (sid: {sid}) | Payload: {data} | Ayrıldıktan sonra oda üyeleri: {members}",
            "leave_room_error": "[SOCKET][LEAVE_ROOM][HATA] {error} | Payload: {data}",
            "send_message": "[SOCKET][SEND_MESSAGE] {user} kullanıcısından {chat_id} odasına mesaj: {message} | Payload: {data}",
            "send_message_error": "[SOCKET][SEND_MESSAGE][HATA] {error} | Payload: {data}",
            "typing": "[SOCKET][TYPING] {user} {chat_id} odasında yazıyor | Payload: {data}",
            "typing_error": "[SOCKET][TYPING][HATA] {error} | Payload: {data}",
            "stop_typing": "[SOCKET][STOP_TYPING] {user} {chat_id} odasında yazmayı bıraktı | Payload: {data}",
            "stop_typing_error": "[SOCKET][STOP_TYPING][HATA] {error} | Payload: {data}",
            "delivered": "[SOCKET][DELIVERED] Mesaj {message_id} {user} kullanıcısına {chat_id} odasında teslim edildi | Payload: {data}",
            "delivered_error": "[SOCKET][DELIVERED][HATA] {error} | Payload: {data}",
            "seen": "[SOCKET][SEEN] Mesaj {message_id} {user} tarafından {chat_id} odasında görüldü | Payload: {data}",
            "seen_error": "[SOCKET][SEEN][HATA] {error} | Payload: {data}"
        }
    },
    "api_started": "API başlatıldı",
    "api_running": "Ticket Service API çalışıyor",
    "service_starting": "Ticket Service başlatılıyor",

    "services": {
        "messageService": {
            "logs": {
                "plain_message_before_encryption": "Şifrelemeden önce düz mesaj: {text}",
                "message_encrypted": "Mesaj şifrelendi.",
                "message_sent": "Mesaj başarıyla gönderildi.",
                "message_send_failed": "Mesaj gönderilemedi: {error}",
                "message_listed": "Mesajlar başarıyla listelendi.",
                "message_list_failed": "Mesajlar listelenemedi: {error}"
            },
            "responses": {
                "receiver_not_found": "receiverId bulunamadı (chat'te başka participant yok)",
                "chat_not_found": "Chat bulunamadı veya participants yok",
                "receiver_and_chat_required": "receiverId ve chatId zorunlu",
                "messages_retrieved": "Mesajlar başarıyla getirildi.",
                "chat_not_found_simple": "Chat bulunamadı.",
                "non_ticket_chats_retrieved": "Ticket ile ilişkili olmayan sohbetler başarıyla getirildi.",
                "chats_retrieved": "Sohbetler başarıyla getirildi.",
                "agent_chats_with_messages_retrieved": "Temsilciye ait sohbetler ve mesajlar başarıyla getirildi.",
                "user_chats_with_messages_retrieved": "Kullanıcıya ait sohbetler ve mesajlar başarıyla getirildi.",
                "chat_could_not_be_created": "Chat oluşturulamadı.",
                "receiver_id_required": "Yeni chat için receiverId gereklidir."
            }
        },
        "ticketService": {
            "logs": {
                "unauthorized": "Kullanıcı doğrulanamadı.",
                "bad_request": "Eksik veya hatalı parametre.",
                "creating_ticket": "Kullanıcı için ticket oluşturuluyor: {user_id}",
                "ticket_created": "Ticket başarıyla oluşturuldu: {ticket_id}",
                "agent_customer_same": "Agent ID ({agent_id}) customer ID ({customer_id}) ile aynı, agent atanmayacak.",
                "agent_id_unknown": "Agent ID 'unknown' geldi, assignedAgentId null olarak ayarlandı.",
                "no_agent_found": "Online agent bulunamadı veya customer ile aynı, assignedAgentId null.",
                "agent_assigned": "Online temsilci bulundu ve atandı: {agent_id}",
                "chat_created": "Ticket için chat oluşturuldu: {ticket_id} - {chat_id}",
                "is_delivered": "is_delivered: {is_delivered}",
                "ticket_event_sent": "ticket_created event Kafka'ya gönderildi: {ticket_id}",
                "agent_mail_notify": "Temsilciye mail bildirimi gönderilmeli: {agent_id}",
                "event_mail_failed": "ticket_created event veya mail gönderilemedi: {error}",
                "listing_tickets": "Kullanıcı için ticket listeleniyor: {user_id}",
                "listing_tickets_for_agent": "Temsilci için ticket listeleniyor: {user_id}",
                "listing_tickets_for_leader": "Leader için ticket listeleniyor: {user_id}",
                "getting_ticket": "Ticket getiriliyor: {ticket_id} kullanıcı: {user_id}",
                "updating_ticket": "Ticket güncelleniyor: {ticket_id} kullanıcı: {user_id}",
                "soft_deleting_ticket": "Ticket siliniyor: {ticket_id} kullanıcı: {user_id}",
                "ticket_created_mail_sent": "Ticket oluşturuldu maili gönderildi: {user_id}",
                "ticket_created_mail_failed": "Ticket oluşturuldu maili gönderilemedi: {error}",
                "leader_assigned_status_in_review": "Leader atandı, status IN_REVIEW olarak ayarlandı: {leader_id}",
                "no_leader_assigned_status_open": "Leader atanmadı, status OPEN olarak kaldı",
                "customer_supporter_ticket_created_in_review": "Customer Supporter ticket oluşturdu, status IN_REVIEW: {agent_id}"
            },
            "responses": {
                "unauthorized": "Kullanıcı doğrulanamadı.",
                "bad_request": "Eksik veya hatalı parametre.",
                "tickets_listed": "Ticketler başarıyla listelendi.",
                "ticket_not_found": "Ticket bulunamadı.",
                "ticket_found": "Ticket bulundu.",
                "tickets_list_failed": "Ticketler listelenemedi.",
                "ticket_created": "Ticket başarıyla oluşturuldu.",
                "ticket_updated": "Ticket başarıyla güncellendi.",
                "ticket_deleted": "Ticket başarıyla silindi.",
                "ticket_soft_deleted": "Ticket başarıyla silindi (soft delete).",
                "customer_supporter_cannot_create_own_ticket": "Customer Supporter kendi adına ticket oluşturamaz. Lütfen farklı bir müşteri seçin."
            }
        },
        "ticketRepository": {
            "logs": {
                "create": "[REPO] TicketRepository.create: ticket_id={ticket_id}",
                "create_error": "[REPO] TicketRepository.create hata: {error}",
                "get_by_id": "[REPO] TicketRepository.get_by_id: ticket_id={ticket_id}, bulundu={found}",
                "get_by_id_error": "[REPO] TicketRepository.get_by_id hata: {error}",
                "list": "[REPO] TicketRepository.list: filter={filter}, count={count}",
                "list_error": "[REPO] TicketRepository.list hata: {error}",
                "update": "[REPO] TicketRepository.update: ticket_id={ticket_id}, değişen={modified}",
                "update_error": "[REPO] TicketRepository.update hata: {error}",
                "soft_delete": "[REPO] TicketRepository.soft_delete: ticket_id={ticket_id}, değişen={modified}",
                "soft_delete_error": "[REPO] TicketRepository.soft_delete hata: {error}"
            }
        },
        "chatService": {
            "logs": {
                "chat_created": "Chat oluşturuldu: {chat_id} (ticket: {ticket_id})",
                "chat_creation_failed": "Chat oluşturulamadı: {error}",
                "participant_added": "Katılımcı eklendi: {user_id} rol: {role}",
                "agent_online": "Agent online: {agent_online}"
            }
        },
        "chatRepository": {
            "logs": {
                "create": "[REPO] ChatRepository.create: chat_id={chat_id}",
                "create_error": "[REPO] ChatRepository.create hata: {error}",
                "get_by_id": "[REPO] ChatRepository.get_by_id: chat_id={chat_id}, bulundu={found}",
                "get_by_id_error": "[REPO] ChatRepository.get_by_id hata: {error}",
                "find_by_ticket_id": "[REPO] ChatRepository.find_by_ticket_id: ticket_id={ticket_id}, bulundu={found}",
                "find_by_ticket_id_error": "[REPO] ChatRepository.find_by_ticket_id hata: {error}",
                "update": "[REPO] ChatRepository.update: chat_id={chat_id}, değişen={modified}",
                "update_error": "[REPO] ChatRepository.update hata: {error}",
                "soft_delete": "[REPO] ChatRepository.soft_delete: chat_id={chat_id}, değişen={modified}",
                "soft_delete_error": "[REPO] ChatRepository.soft_delete hata: {error}"
            }
        },
        "categoryService": {
            "logs": {
                "listing_categories": "Kategoriler listeleniyor",
                "creating_category": "Kategori oluşturuluyor: {category_name_tr} {category_name_en}",
                "category_created": "Kategori başarıyla oluşturuldu.",
                "updating_category": "Kategori güncelleniyor: {category_id}",
                "category_updated": "Kategori başarıyla güncellendi: {category_id}",
                "deleting_category": "Kategori siliniyor: {category_id}",
                "category_deleted": "Kategori başarıyla silindi: {category_id}",
                "category_name_exists": "Bu isimde bir kategori zaten mevcut."
            },
            "responses": {
                "bad_request": "Eksik veya hatalı parametre.",
                "category_not_found": "Kategori bulunamadı.",
                "category_not_created": "Kategori oluşturulamadı.",
                "category_updated": "Kategori başarıyla güncellendi.",
                "category_deleted": "Kategori başarıyla silindi.",
                "categories_listed": "Kategoriler başarıyla listelendi.",
                "category_created": "Kategori başarıyla oluşturuldu."
            }
        },
        "categoryRepository": {
            "logs": {
                "create": "[REPO] CategoryRepository.create: category_id={category_id}",
                "create_error": "[REPO] CategoryRepository.create hata: {error}",
                "get_by_id": "[REPO] CategoryRepository.get_by_id: category_id={category_id}, bulundu={found}",
                "get_by_id_error": "[REPO] CategoryRepository.get_by_id hata: {error}",
                "list": "[REPO] CategoryRepository.list: filter={filter}, count={count}",
                "list_error": "[REPO] CategoryRepository.list hata: {error}",
                "update": "[REPO] CategoryRepository.update: category_id={category_id}, değişen={modified}",
                "update_error": "[REPO] CategoryRepository.update hata: {error}",
                "soft_delete": "[REPO] CategoryRepository.soft_delete: category_id={category_id}, değişen={modified}",
                "soft_delete_error": "[REPO] CategoryRepository.soft_delete hata: {error}"
            }
        },
        "productService": {
            "logs": {
                "product_created": "Ürün başarıyla oluşturuldu.",
                "product_updated": "Ürün başarıyla güncellendi.",
                "product_deleted": "Ürün başarıyla silindi.",
                "category_not_found": "Kategori bulunamadı!",
                "product_name_exists": "Bu isimde bir ürün zaten mevcut.",
                "listing_products": "Ürünler listeleniyor.",
                "listing_products_error": "Ürünler listelenirken hata oluştu.",
                "creating_product": "Ürün oluşturuluyor.",
                "product_creation_error": "Ürün oluşturulurken hata oluştu.",
                "updating_product": "Ürün güncelleniyor.",
                "product_update_error": "Ürün güncellenirken hata oluştu.",
                "soft_deleting_product": "Ürün siliniyor."
            },
            "responses": {
                "product_created": "Ürün başarıyla oluşturuldu.",
                "product_updated": "Ürün başarıyla güncellendi.",
                "product_deleted": "Ürün başarıyla silindi.",
                "products_listed": "Ürünler başarıyla listelendi.",
                "product_not_found": "Ürün bulunamadı."
            }
        },
        "taskService": {
            "logs": {
                "task_created": "Görev başarıyla oluşturuldu.",
                "task_creation_error": "Görev oluşturulurken hata oluştu.",
                "task_updated": "Görev başarıyla güncellendi.",
                "task_update_error": "Görev güncellenirken hata oluştu.",
                "task_deleted": "Görev başarıyla silindi.",
                "task_delete_error": "Görev silinirken hata oluştu.",
                "get_tasks": "Görevler başarıyla listelendi.",
                "get_task": "Görev başarıyla getirildi.",
                "task_not_found": "Görev bulunamadı.",
                "employee_tasks_listed": "Çalışan görevleri başarıyla listelendi.",
                "get_tasks_employee": "Çalışan görevleri getiriliyor.",
                "get_tasks_employee_error": "Çalışan görevleri getirilirken hata oluştu.",
                "create_task": "Görev oluşturuluyor.",
                "create_task_error": "Görev oluşturulurken hata oluştu.",
                "task_already_exists": "Bu ticket için zaten bir görev mevcut.",
                "past_deadline_not_allowed": "Görev bitiş tarihi geçmiş bir tarih olamaz. Lütfen bugünden sonraki bir tarih seçin.",
                "invalid_deadline_format": "Görev bitiş tarihi formatı geçersiz. Lütfen doğru tarih formatını kullanın.",
                "deadline_required": "Görev bitiş tarihi zorunludur.",
                "deadline_too_far": "Görev bitiş tarihi çok uzak bir tarih olamaz. Maksimum 1 yıl sonrası seçilebilir."
            },
            "responses": {
                "task_created": "Görev başarıyla oluşturuldu.",
                "task_updated": "Görev başarıyla güncellendi.",
                "task_deleted": "Görev başarıyla silindi.",
                "task_already_exists": "Bu ticket için zaten bir görev mevcut.",
                "past_deadline_not_allowed": "Görev bitiş tarihi geçmiş bir tarih olamaz. Lütfen bugünden sonraki bir tarih seçin.",
                "invalid_deadline_format": "Görev bitiş tarihi formatı geçersiz. Lütfen doğru tarih formatını kullanın.",
                "deadline_required": "Görev bitiş tarihi zorunludur.",
                "deadline_too_far": "Görev bitiş tarihi çok uzak bir tarih olamaz. Maksimum 1 yıl sonrası seçilebilir.",
                "title_required": "Görev başlığı zorunludur.",
                "title_too_long": "Görev başlığı en fazla 50 karakter olabilir.",
                "description_required": "Görev açıklaması zorunludur.",
                "description_too_long": "Görev açıklaması en fazla 500 karakter olabilir."
            }
        },
        "reportService": {
            "logs": {
                "get_dashboard_statistics": "Dashboard istatistikleri getiriliyor.",
                "get_dashboard_statistics_error": "Dashboard istatistikleri getirilirken hata oluştu."
            },
            "responses": {
                "export_dashboard_statistics": "Dashboard istatistikleri başarıyla dışa aktarıldı.",
                "export_dashboard_statistics_error": "Dashboard istatistikleri dışa aktarılamadı.",
                "get_dashboard_statistics": "Dashboard istatistikleri başarıyla getirildi.",
                "get_dashboard_statistics_error": "Dashboard istatistikleri getirilemedi."
            }
        }
    },

    "middleware": {
        "loremFilter": {
            "lorem_words_detected": "Tekrarlı kelimeler tespit edildi. Lütfen gerçek içerik kullanın.",
            "field_contains_lorem": "{field} alanında tekrarlı kelimeler bulundu: {words}",
            "multiple_violations": "{count} farklı alanda tekrarlı kelimeler tespit edildi."
        }
    },
    "controllers": {
        "categoryController": {
            "logs": {
                "listing_categories": "Kategoriler listeleniyor",
                "creating_category": "Kategori oluşturuluyor: {category_name_tr} {category_name_en}",
                "category_created": "Kategori başarıyla oluşturuldu.",
                "updating_category": "Kategori güncelleniyor: {category_id}",
                "category_updated": "Kategori başarıyla güncellendi: {category_id}",
                "deleting_category": "Kategori siliniyor: {category_id}",
                "category_deleted": "Kategori başarıyla silindi: {category_id}",
                "category_name_exists": "Bu isimde bir kategori zaten mevcut.",
                "category_list_error": "Kategoriler listelenemedi.",
                "category_creation_error": "Kategori oluşturulamadı.",
                "category_update_error": "Kategori güncellenemedi.",
                "category_deletion_error": "Kategori silinemedi."
            }
        },
        "ticketController": {
            "logs": {
                "list_tickets_called": "list_tickets çağrıldı. user={user_id}",
                "list_tickets_result": "list_tickets sonucu: {result}",
                "get_ticket_called": "get_ticket çağrıldı. user={user_id}, ticket_id={ticket_id}",
                "get_ticket_result": "get_ticket sonucu: {result}",
                "update_ticket_called": "update_ticket çağrıldı. user={user_id}, ticket_id={ticket_id}",
                "update_ticket_result": "update_ticket sonucu: {result}",
                "delete_ticket_called": "delete_ticket çağrıldı. user={user_id}, ticket_id={ticket_id}",
                "delete_ticket_result": "delete_ticket sonucu: {result}",
                "list_tickets_admin_called": "list_tickets_admin çağrıldı. user={user_id}",
                "list_tickets_admin_result": "list_tickets_admin sonucu: {result}",
                "get_ticket_admin_called": "get_ticket_admin çağrıldı. user={user_id}, ticket_id={ticket_id}",
                "get_ticket_admin_result": "get_ticket_admin sonucu: {result}",
                "soft_delete_ticket_admin_called": "soft_delete_ticket_admin çağrıldı. user={user_id}, ticket_id={ticket_id}",
                "soft_delete_ticket_admin_result": "soft_delete_ticket_admin sonucu: {result}",
                "list_tickets_user_called": "list_tickets_user çağrıldı. user={user_id}",
                "list_tickets_user_result": "list_tickets_user sonucu: {result}",
                "get_ticket_user_called": "get_ticket_user çağrıldı. user={user_id}, ticket_id={ticket_id}",
                "get_ticket_user_result": "get_ticket_user sonucu: {result}",
                "soft_delete_ticket_user_called": "soft_delete_ticket_user çağrıldı. user={user_id}, ticket_id={ticket_id}",
                "soft_delete_ticket_user_result": "soft_delete_ticket_user sonucu: {result}",
                "list_tickets_agent_called": "list_tickets_agent çağrıldı. user={user_id}",
                "list_tickets_agent_result": "list_tickets_agent sonucu: {result}",
                "list_tickets_leader_called": "list_tickets_leader çağrıldı. user={user_id}",
                "list_tickets_leader_result": "list_tickets_leader sonucu: {result}"
            }
        }
    }
}